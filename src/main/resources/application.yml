spring:
  shardingsphere:
    datasource:
      names: master
      master:
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
        username: root
        password: chen1232
        driver-class-name: com.mysql.cj.jdbc.Driver

    sharding:
      binding-tables: log
      tables:
        log:
          actual-data-nodes: master.log_$->{1..2}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: log_$->{id % 2}
          key-generator:
            column: id
            type: SNOWFLAKE
            props:
              worker:
                id: 123


#              spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds.t_order_$->{0..1}
#              spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#              spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
#              spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
#              spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
#              spring.shardingsphere.sharding.tables.t_order.key-generator.props.worker.id=123
#
#
#              spring.shardingsphere.sharding.binding-tables=t_order,t_order_item
#              spring.shardingsphere.sharding.broadcast-tables=t_address
#spring:
#  datasource:
#    url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
#    username: root
#    password: chen1232
#    driver-class-name: com.mysql.cj.jdbc.Driver

#配置xml映射路径
mybatis:
  mapper-locations: classpath:mapper/*.xml

